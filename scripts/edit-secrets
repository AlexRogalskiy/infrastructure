#!/bin/bash

set -euo pipefail

dir="$(dirname $0)"

source "$dir/vault-secrets.sh"
source "$dir/tfhelpers.sh"

fail () {
    echo $@ 1>&2
    exit 1
}

[ -z "${1:-}" ] && fail "must provide an environment to edit (e.g. production)"

env="$1"

pushd "$dir/../bootstrap" > /dev/null
  gcs_bucket_name="$(tfoutput greenpeace_bucket_name)"
  greenpeace_crypto_key_self_link="$(tfoutput greenpeace_crypto_key_link)"
popd > /dev/null

tmp_dir="$(mktemp -d -t vault)"

cleanup () {
  rm -rf "$tmp_dir"
}

trap cleanup EXIT

gcs_data_path="gs://$gcs_bucket_name/vault/$env/data.tar"
pushd "$tmp_dir" > /dev/null
  echo "downloading $gcs_data_path..."
  gsutil -q cp "$gcs_data_path" data.tar
  tar -xf data.tar

  echo "decrypting..."
  decrypt "$greenpeace_crypto_key_self_link"

  ${EDITOR:-vi} secrets.json || fail "EDITOR command failed. aborting."

  echo "rotating encryption key..."
  generate_keys "$greenpeace_crypto_key_self_link"
  pack "$greenpeace_crypto_key_self_link"

  echo "uploading $gcs_data_path..."
  gsutil -q cp data.tar "$gcs_data_path"
popd > /dev/null

